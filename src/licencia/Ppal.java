/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package licencia;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author PC
 */
public class Ppal extends javax.swing.JFrame {
String clave = "";
    /**
     * Creates new form Ppal
     */
    public Ppal() throws IOException {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("CÃ³digo de licencia");
        String mensaje[] = new String[5];
        mensaje[0] = "wmic bios get version";
        mensaje[1] = "wmic bios get smbiosbiosversion";
        mensaje[2] = "wmic bios get smbiosmajorversion";
        mensaje[3] = "wmic bios get smbiosminorversion";
        mensaje[4] = "wmic bios get releasedate";
        Process Proceso;
        InputStream PIS;
        InputStreamReader ISR;
        BufferedReader reader;
        for (int i = 0; i < mensaje.length; i++) {
            Proceso = Runtime.getRuntime().exec(mensaje[i]);
            PIS = Proceso.getInputStream();
            ISR = new InputStreamReader(PIS);
            reader = new BufferedReader(ISR);
            String name, str = null;
            while ((name = reader.readLine()) != null) {
                str = str + name;
            }
            String arr[], linea;
            arr = str.split(" ");
            linea = arr[arr.length - 1];
            if(i>=(mensaje.length-1)){
                linea=linea.substring(0, 8);
            }
            clave = clave + linea;
        }
        Codigo();
    }
    private void Codigo() {
        byte[] byt = clave.getBytes();
        txt_Palabra.setText(new String(byt));
        ArrayList<Integer> Vector=new ArrayList();
        switch(Math.floorMod(byt.length, 3)){
            case 0:
                for (int i = 0; i < byt.length; i+=3) {
                    Vector.add(byt[i]*(int)Math.pow(2.0, 24.0)+byt[i+1]*(int)Math.pow(2.0, 16.0)+byt[i+2]*(int)Math.pow(2.0, 8.0)+0xAA);
                }
                break;
            case 1:
                for (int i = 0; i < byt.length-2; i+=3) {
                    Vector.add(byt[i]*(int)Math.pow(2.0, 24.0)+byt[i+1]*(int)Math.pow(2.0, 16.0)+byt[i+2]*(int)Math.pow(2.0, 8.0)+0xAA);
                }
                Vector.add(byt[byt.length-1]*(int)Math.pow(2.0, 24.0)+0xAAAAAA);
                break;
            case 2:
                for (int i = 0; i < byt.length-2; i+=3) {
                    Vector.add(byt[i]*(int)Math.pow(2.0, 24.0)+byt[i+1]*(int)Math.pow(2.0, 16.0)+byt[i+2]*(int)Math.pow(2.0, 8.0));
                }
                Vector.add(byt[byt.length-2]*(int)Math.pow(2.0, 24.0)+byt[byt.length-1]*(int)Math.pow(2.0, 16.0)+0xAAAA);
                break;
        }
        int Polinomio=0xAA;
        int[] Resto=new int[Vector.size()];
        for (int i = 0; i < Vector.size(); i++) {
            Resto[i]=Math.floorMod(Vector.get(i), Polinomio);
        }
        String binario=String.valueOf(Resto[0]);
        for (int i = 1; i < Resto.length; i++) {
            binario = binario+"-"+String.valueOf(Resto[i]);
        }
        txt_Codigo.setText(binario); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_Palabra = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_Codigo = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txt_Palabra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_PalabraActionPerformed(evt);
            }
        });

        jLabel1.setText("Palabra:");

        jLabel2.setText("Codigo:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_Palabra, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_Codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Palabra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_PalabraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_PalabraActionPerformed
        clave=txt_Palabra.getText();
        Codigo();
    }//GEN-LAST:event_txt_PalabraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ppal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ppal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ppal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ppal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Ppal().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Ppal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txt_Codigo;
    private javax.swing.JTextField txt_Palabra;
    // End of variables declaration//GEN-END:variables
}
